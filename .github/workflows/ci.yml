name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5
          bundler-cache: true

      - name: Brakeman - Static Security Analysis
        run: |
          gem install brakeman
          brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5
          bundler-cache: true

      - name: Run JavaScript Dependency Audit
        run: |
          bin/importmap audit || echo "importmap-audit failed (not critical)"

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5
          bundler-cache: true

      - name: Run RuboCop
        run: |
          gem install rubocop
          bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports: [5432:5432]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5
          bundler-cache: true

      - name: Prepare DB
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@localhost:5432/test_db
        run: |
          bin/rails db:create db:schema:load

      - name: Run Tests
        env:
          RAILS_ENV: test
        run: bin/rails test:all

      - name: Upload screenshots if system test fails
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: system-test-screenshots
          path: tmp/screenshots
          if-no-files-found: ignore
